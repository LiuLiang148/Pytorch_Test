###广播机制
#
#1.通过适当复制元素来扩展一个或两个数组，以便在转换之后，两个张量具有相同的形状；
#2.对生成的数组执行按元素操作。
# ##
import torch
a = torch.arange(3).reshape((3,1))  #3行1列与1行2列相加，会自动复制长度为1的维度进行扩张，
b = torch.arange(2).reshape(1,2)    #变为两个3行2列的张量相加
print(a)
print(b)

print(a+b)

#索引和切片

X = torch.arange(12, dtype=torch.float32).reshape((3,4))

print(X)
print(X[-1])    # 可以用[-1]选择最后一个元素,0为第一个元素,类似数组下标

#可以用[1:3]选择第二个和第三个元素,左闭右开区间，即不包括右端
print((X[1:3]))

X[1,2] = 9  #修改第二行第三列元素
print(X)


##
#
# 如果我们想[为多个元素赋值相同的值，我们只需要索引所有元素，然后为它们赋值。
# 例如，[0:2, :]访问第1行和第2行，其中“:”代表沿轴1（列）的所有元素。
# 虽然我们讨论的是矩阵的索引，但这也适用于向量和超过2个维度的张量。
# ##

X[0:2, :] = 12
print(X)
